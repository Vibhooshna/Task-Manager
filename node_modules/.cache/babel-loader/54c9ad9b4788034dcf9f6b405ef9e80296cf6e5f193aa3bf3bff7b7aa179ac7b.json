{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\n\n// Fetch all tasks with filters\nconst getTasks = async filters => {\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      },\n      params: filters\n    });\n    return response.data;\n  } catch (err) {\n    console.error('Error fetching tasks:', err);\n    throw err;\n  }\n};\n\n// Fetch a single task by ID\nconst getTask = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`, {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      }\n    });\n    return response.data;\n  } catch (err) {\n    console.error('Error fetching task:', err);\n    throw err;\n  }\n};\n\n// Create a new task\nconst createTask = async data => {\n  try {\n    await axios.post(API_URL, data, {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      }\n    });\n  } catch (err) {\n    console.error('Error creating task:', err);\n    throw err;\n  }\n};\n\n// Update a task\nconst updateTask = async (id, data) => {\n  try {\n    await axios.put(`${API_URL}/${id}`, data, {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      }\n    });\n  } catch (err) {\n    console.error('Error updating task:', err);\n    throw err;\n  }\n};\n\n// Delete a task by ID\nconst deleteTask = async id => {\n  try {\n    await axios.delete(`${API_URL}/${id}`, {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      }\n    });\n  } catch (err) {\n    console.error('Error deleting task:', err);\n    throw err;\n  }\n};\nexport default {\n  getTasks,\n  getTask,\n  createTask,\n  updateTask,\n  deleteTask\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getTasks","filters","response","get","headers","localStorage","getItem","params","data","err","console","error","getTask","id","createTask","post","updateTask","put","deleteTask","delete"],"sources":["C:/Users/D.M.VIBHOOSHNA/TaskManager/frontend/src/services/taskService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL + '/tasks';\r\n\r\n// Fetch all tasks with filters\r\nconst getTasks = async (filters) => {\r\n  try {\r\n    const response = await axios.get(API_URL, {\r\n      headers: { 'x-auth-token': localStorage.getItem('token') },\r\n      params: filters,\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('Error fetching tasks:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Fetch a single task by ID\r\nconst getTask = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/${id}`, {\r\n      headers: { 'x-auth-token': localStorage.getItem('token') },\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('Error fetching task:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Create a new task\r\nconst createTask = async (data) => {\r\n  try {\r\n    await axios.post(API_URL, data, {\r\n      headers: { 'x-auth-token': localStorage.getItem('token') },\r\n    });\r\n  } catch (err) {\r\n    console.error('Error creating task:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Update a task\r\nconst updateTask = async (id, data) => {\r\n  try {\r\n    await axios.put(`${API_URL}/${id}`, data, {\r\n      headers: { 'x-auth-token': localStorage.getItem('token') },\r\n    });\r\n  } catch (err) {\r\n    console.error('Error updating task:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// Delete a task by ID\r\nconst deleteTask = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/${id}`, {\r\n      headers: { 'x-auth-token': localStorage.getItem('token') },\r\n    });\r\n  } catch (err) {\r\n    console.error('Error deleting task:', err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport default {\r\n  getTasks,\r\n  getTask,\r\n  createTask,\r\n  updateTask,\r\n  deleteTask,\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,QAAQ;;AAExD;AACA,MAAMC,QAAQ,GAAG,MAAOC,OAAO,IAAK;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,EAAE;MACxCQ,OAAO,EAAE;QAAE,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE,CAAC;MAC1DC,MAAM,EAAEN;IACV,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC3C,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,MAAMG,OAAO,GAAG,MAAOC,EAAE,IAAK;EAC5B,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,IAAIiB,EAAE,EAAE,EAAE;MACnDT,OAAO,EAAE;QAAE,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE;IAC3D,CAAC,CAAC;IACF,OAAOJ,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1C,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,MAAMK,UAAU,GAAG,MAAON,IAAI,IAAK;EACjC,IAAI;IACF,MAAMb,KAAK,CAACoB,IAAI,CAACnB,OAAO,EAAEY,IAAI,EAAE;MAC9BJ,OAAO,EAAE;QAAE,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1C,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,MAAMO,UAAU,GAAG,MAAAA,CAAOH,EAAE,EAAEL,IAAI,KAAK;EACrC,IAAI;IACF,MAAMb,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,IAAIiB,EAAE,EAAE,EAAEL,IAAI,EAAE;MACxCJ,OAAO,EAAE;QAAE,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1C,MAAMA,GAAG;EACX;AACF,CAAC;;AAED;AACA,MAAMS,UAAU,GAAG,MAAOL,EAAE,IAAK;EAC/B,IAAI;IACF,MAAMlB,KAAK,CAACwB,MAAM,CAAC,GAAGvB,OAAO,IAAIiB,EAAE,EAAE,EAAE;MACrCT,OAAO,EAAE;QAAE,cAAc,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;IAC1C,MAAMA,GAAG;EACX;AACF,CAAC;AAED,eAAe;EACbT,QAAQ;EACRY,OAAO;EACPE,UAAU;EACVE,UAAU;EACVE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}